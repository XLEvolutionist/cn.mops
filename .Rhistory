theme(axis.text.y = element_text(size=12)) +#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())
ggplot(data=data2,aes(x=data2$MES,y=data2$MAS)) +#
geom_errorbar(aes(ymin = data2$MAS-data2$ASS,ymax = data2$MAS+data2$ASS), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MES-data2$ESS,xmax = data2$MES+data2$ESS),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=12)) +#
theme(axis.text.y = element_text(size=12)) +#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())
ggplot(data=data2,aes(x=data2$MES,y=data2$MAS)) +#
geom_errorbar(aes(ymin = data2$MAS-data2$ASS,ymax = data2$MAS+data2$ASS), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MES-data2$ESS,xmax = data2$MES+data2$ESS),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=12)) +#
theme(axis.text.y = element_text(size=12)) +#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())+#
annotate("text", x = -43, y = -32, label = "Summer")
ggplot(data=data2,aes(x=data2$MES,y=data2$MAS)) +#
geom_errorbar(aes(ymin = data2$MAS-data2$ASS,ymax = data2$MAS+data2$ASS), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MES-data2$ESS,xmax = data2$MES+data2$ESS),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=12)) +#
theme(axis.text.y = element_text(size=12)) +#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())+#
annotate("text", x = -43, y = -32, label = "Summer", size = 10)
ggplot(data=data2,aes(x=data2$MES,y=data2$MAS)) +#
geom_errorbar(aes(ymin = data2$MAS-data2$ASS,ymax = data2$MAS+data2$ASS), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MES-data2$ESS,xmax = data2$MES+data2$ESS),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=12)) +#
theme(axis.text.y = element_text(size=12)) +#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())+#
annotate("text", x = -41, y = -32, label = "Summer", size = 10)
ggplot(data=data2,aes(x=data2$MES,y=data2$MAS)) +#
geom_errorbar(aes(ymin = data2$MAS-data2$ASS,ymax = data2$MAS+data2$ASS), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MES-data2$ESS,xmax = data2$MES+data2$ESS),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=12)) +#
theme(axis.text.y = element_text(size=12)) +#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())+#
annotate("text", x = -41, y = -32, label = "Summer", size = 8)
ggplot(data=data2,aes(x=data2$MES,y=data2$MAS)) +#
geom_errorbar(aes(ymin = data2$MAS-data2$ASS,ymax = data2$MAS+data2$ASS), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MES-data2$ESS,xmax = data2$MES+data2$ESS),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=12)) +#
theme(axis.text.y = element_text(size=12)) +#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())+#
annotate("text", x = -41, y = -32, label = "Summer", size = 7)
ggplot(data=data2,aes(x=data2$MES,y=data2$MAS)) +#
geom_errorbar(aes(ymin = data2$MAS-data2$ASS,ymax = data2$MAS+data2$ASS), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MES-data2$ESS,xmax = data2$MES+data2$ESS),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=12)) +#
theme(axis.text.y = element_text(size=12)) +#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())+#
annotate("text", x = -41, y = -31, label = "Summer", size = 7)
ggplot(data=data2,aes(x=data2$MES,y=data2$MAS)) +#
geom_errorbar(aes(ymin = data2$MAS-data2$ASS,ymax = data2$MAS+data2$ASS), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MES-data2$ESS,xmax = data2$MES+data2$ESS),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=12)) +#
theme(axis.text.y = element_text(size=12)) +#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())+#
annotate("text", x = -41.5, y = -31, label = "Summer", size = 7)
ggplot(data=data2,aes(x=data2$MES,y=data2$MAS)) +#
geom_errorbar(aes(ymin = data2$MAS-data2$ASS,ymax = data2$MAS+data2$ASS), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MES-data2$ESS,xmax = data2$MES+data2$ESS),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=16)) +#
theme(axis.text.y = element_text(size=16)) +#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())+#
annotate("text", x = -41.5, y = -31, label = "Summer", size = 7)
ggplot(data=data2,aes(x=data2$MES,y=data2$MAS)) +#
geom_errorbar(aes(ymin = data2$MAS-data2$ASS,ymax = data2$MAS+data2$ASS), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MES-data2$ESS,xmax = data2$MES+data2$ESS),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=14)) +#
theme(axis.text.y = element_text(size=14)) +#
theme(axis.title.y = element_text(size=14))#
theme(axis.title.x = element_text(size=14))#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())+#
annotate("text", x = -41.5, y = -31, label = "Summer", size = 7)
ggplot(data=data2,aes(x=data2$MES,y=data2$MAS)) +#
geom_errorbar(aes(ymin = data2$MAS-data2$ASS,ymax = data2$MAS+data2$ASS), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MES-data2$ESS,xmax = data2$MES+data2$ESS),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=14)) +#
theme(axis.text.y = element_text(size=14)) +#
theme(axis.title.y = element_text(size=14))+#
theme(axis.title.x = element_text(size=14))+#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())+#
annotate("text", x = -41.5, y = -31, label = "Summer", size = 7)
ggplot(data=data2,aes(x=data2$MES,y=data2$MAS)) +#
geom_errorbar(aes(ymin = data2$MAS-data2$ASS,ymax = data2$MAS+data2$ASS), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MES-data2$ESS,xmax = data2$MES+data2$ESS),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=14)) +#
theme(axis.text.y = element_text(size=14)) +#
theme(axis.title.y = element_text(size=14))+#
theme(axis.title.x = element_text(size=14))+#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())+#
annotate("text", x = -41.5, y = -31, label = "Summer", size = 6)
ggplot(data=data2,aes(x=data2$MEW,y=data2$MAW)) +#
geom_errorbar(aes(ymin = data2$MAW-data2$ASW,ymax = data2$MAW+data2$ASW), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MEW-data2$ESW,xmax = data2$MEW+data2$ESW),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=14)) +#
theme(axis.text.y = element_text(size=14)) +#
theme(axis.title.y = element_text(size=14))+#
theme(axis.title.x = element_text(size=14))+#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())+#
annotate("text", x = -41.5, y = -31, label = "Winter", size = 6)
pdf("/Users/srbyfield/Desktop/Dr Sarah Tuffin PhD/EpiVsAgidelta13CSummer.pdf", width = 6 , height = 6 )#
Summer#
dev.off()#
pdf("/Users/srbyfield/Desktop/Dr Sarah Tuffin PhD/EpiVsAgidelta13CWinter.pdf", width = 6 , height = 6 )#
Winter#
dev.off()
Winter<-ggplot(data=data2,aes(x=data2$MEW,y=data2$MAW)) +#
geom_errorbar(aes(ymin = data2$MAW-data2$ASW,ymax = data2$MAW+data2$ASW), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MEW-data2$ESW,xmax = data2$MEW+data2$ESW),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=14)) +#
theme(axis.text.y = element_text(size=14)) +#
theme(axis.title.y = element_text(size=14))+#
theme(axis.title.x = element_text(size=14))+#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())+#
annotate("text", x = -41.5, y = -31, label = "Winter", size = 6)#
#
pdf("/Users/srbyfield/Desktop/Dr Sarah Tuffin PhD/EpiVsAgidelta13CSummer.pdf", width = 6 , height = 6 )#
Summer#
dev.off()#
pdf("/Users/srbyfield/Desktop/Dr Sarah Tuffin PhD/EpiVsAgidelta13CWinter.pdf", width = 6 , height = 6 )#
Winter#
dev.off()
Summer<-ggplot(data=data2,aes(x=data2$MES,y=data2$MAS)) +#
geom_errorbar(aes(ymin = data2$MAS-data2$ASS,ymax = data2$MAS+data2$ASS), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MES-data2$ESS,xmax = data2$MES+data2$ESS),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=14)) +#
theme(axis.text.y = element_text(size=14)) +#
theme(axis.title.y = element_text(size=14))+#
theme(axis.title.x = element_text(size=14))+#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())+#
annotate("text", x = -41.5, y = -31, label = "Summer", size = 6)#
Winter<-ggplot(data=data2,aes(x=data2$MEW,y=data2$MAW)) +#
geom_errorbar(aes(ymin = data2$MAW-data2$ASW,ymax = data2$MAW+data2$ASW), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = data2$MEW-data2$ESW,xmax = data2$MEW+data2$ESW),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 2.5) +#
xlim(-44,-30) +#
ylim(-44,-30)+#
geom_abline(intercept = 0, slope = 1)+#
geom_abline(intercept = 1, slope = 1, linetype="longdash")+#
#		geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=14)) +#
theme(axis.text.y = element_text(size=14)) +#
theme(axis.title.y = element_text(size=14))+#
theme(axis.title.x = element_text(size=14))+#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())+#
annotate("text", x = -41.5, y = -31, label = "Winter", size = 6)#
#
pdf("/Users/srbyfield/Desktop/Dr Sarah Tuffin PhD/EpiVsAgidelta13CSummer.pdf", width = 6 , height = 6 )#
Summer#
dev.off()#
pdf("/Users/srbyfield/Desktop/Dr Sarah Tuffin PhD/EpiVsAgidelta13CWinter.pdf", width = 6 , height = 6 )#
Winter#
dev.off()
library(ggplot2)#
data<-read.csv("/Users/srbyfield/Desktop/Dr Sarah Tuffin PhD/Sarah_data.csv")#
data<-data.frame(data)#
attach(data)#
#
dataSummer<-data[data$Season == "Summer",]#
dataWinter<-data[data$Season == "Winter",]#
#
SummerMean<-tapply(dataSummer[,2],dataSummer[,1], function(x) mean(x) )#
SummerSD<-tapply(dataSummer[,2],dataSummer[,1], function(x) sd(x) )#
WinterMean<-tapply(dataWinter[,2],dataWinter[,1], function(x) mean(x) )#
WinterSD<-tapply(dataWinter[,2],dataWinter[,1], function(x) sd(x) )#
#
data2<-data.frame(cbind(SummerMean,SummerSD,WinterMean,WinterSD))#
#
barwidth<-8#
title1<-expression(paste("Mean winter methane concentration(nmolL"^"1",")"))#
title2<-expression(paste("Mean summer methane concentration(nmolL"^"1",")"))#
#
WvS<-ggplot(data=data2,aes(x=WinterMean,y=SummerMean,color=rownames(data2))) +#
geom_errorbar(aes(ymin = SummerMean-SummerSD,ymax = SummerMean+SummerSD), size = 0.5, color="black", width = barwidth) + #
geom_errorbarh(aes(xmin = WinterMean-WinterSD,xmax = WinterMean+WinterSD),size = 0.5,color="black", height = barwidth)+#
geom_point(size = 3) +#
geom_point(size = 3, colour="black", pch =1) +#
xlab(title1) +#
ylab(title2)	+#
theme(axis.text.x = element_text(size=12)) +#
theme(axis.text.y = element_text(size=12)) +#
theme(panel.background = element_rect(fill = "white", color = "black"))+#
theme(panel.grid.minor = element_blank()) +		#
theme(legend.title=element_blank())#
#
pdf("/Users/srbyfield/Desktop/Dr Sarah Tuffin PhD/SummerVsWinterMethane.pdf", width = 6 , height = 6 )#
WvS#
dev.off()
sd(runif(1:10))
num<-runif(1:10)
num
sd(num)
sd(num+10)
60*60
install.packages("SeqGrapheR.tar.gz", repos = FALSE)
install.packages("SeqGrapheR.tar.gz", repos = NULL)
source("http://bioconductor.org/biocLite.R")
biocLite("Biostrings")
install.packages("SeqGrapheR_0.4.8.3.tar.gz", repos = NULL)
install.packages("SeqGrapheR_0.4.8.3.tar.gz", repos = NULL,type="source")
install.packages("rggobi")
install.packages("rggobi", type="source")
install.packages("RGtk2")
install.packages("rggobi", type="source")
install.packages("gWidgets", type="source")
install.packages("gWidgetsRGtk2", type="source")
install.packages("cairoDevice", type="source")
install.packages("cairoDevice")
install.packages("gWidgetsRGtk2")
install.packages("RGtk2")
install.packages("rggobi")
install.packages("rggobi", type = "source")
Sys.setenv(PATH=paste("/Library/Frameworks/GTK+.framework/Resources/ #
bin",Sys.getenv("PATH"),sep=":"))
install.packages("rggobi", type = "source")
install.packages("rggobi_2.1.20.tar.gz", repos=NULL)
install.packages("rggobi_2.1.20.tar.gz", repos=NULL, type = "source")
install.packages("rggobi_2.1.1.tar.gz", repos=NULL, type = "source")
Sys.setenv(PATH=paste("/Library/Frameworks/GTK+.framework/Resources/ #
bin",Sys.getenv("PATH"),sep=":"))
install.packages("rggobi_2.1.1.tar.gz", repos=NULL, type = "source")
install.packages("rggobi_2.1.1.tar.gz", repos=NULL)
Sys.setenv(PATH=paste("/opt/local/lib/pkgconfig",Sys.getenv("PATH"),sep=":"))
install.packages("rggobi_2.1.1.tar.gz", repos=NULL, type = "source")
install.packages("rggobi", type = "source")
Rlibs
.libPaths()
install.packages("rggobi")
install.packages("rggobi", type = "source")
install.packages("Rcytoscape")
install.packages("Rcytoscape", type="source")
source("http://bioconductor.org/biocLite.R")
biocLite("RCytoscape")
library(WGCNA)#
library(igraph)#
library(Rcytoscape)
library(WGCNA)#
library(igraph)#
library(RCytoscape)
biocLite("impute")
install.packages("WGCNA")
library(WGCNA)#
library(igraph)#
library(RCytoscape)
load("~/Desktop/GeneCoExpressionGraphDom.DataAdj.R")
attributes(gDom)
newFormat<-igraph.to.graphNEL(gDom)
aTTnewFormat<-initNodeAttribute(newFormat, attribute.name, attribute.type, default.value)
aTTnewFormat<-initNodeAttribute(newFormat, "wieght", "numeric", 1)
head(colorsWild)
newFormat<-igraph.to.graphNEL(gDom)#
aTTnewFormat<-initNodeAttribute(newFormat, "string", colorsWild)
aTTnewFormat<-initNodeAttribute(newFormat, "char", colorsWild)
aTTnewFormat<-initNodeAttribute(newFormat, "color", "char", colorsWild)
aTTnewFormat<-initEdgeAttribute(newFormat, "weigth", "numeric",1)
new.CytoscapeWindow()
write.graph(gDom,file="myFuckingGraph.gml", format='gml')
write.graph(gDom,file="myFuckingGraph.GLM", format='glm')
write.graph(gDom,file="myFuckingGraph.gml", format='gml')
write.graph(gDom,file="myFuckingGraph.graphml", format='graphml')
write.graph(gDom,file="myFuckingGraph.GML", format='gml')
plot(gDom,layout=coord3Ddom, vertex.size=0.8,vertex.color=colorsWild)
rglplot(gDom,layout=coord3Ddom, vertex.size=0.8,edge.color="black",vertex.color=colorsWild, vertex.label=NA)
V(gDom)$color
gDom<-NULL#
gDom<- graph.empty(n=0, directed=FALSE)#
#add vertices#
gDom<- add.vertices(gDom,nv=length(names), name=names)#
#add edges#
gDom[from=as.character(edgeTestDom[,1]),to=as.character(edgeTestDom[,2]),attr="weight"]<-as.numeric(edgeTestDom[,3])#
#add the color attribute#
gDom<-set.graph.attribute(gDom, V(gDom)$color, colorsWild)#
#remove nodes with no edges#
gDom<-delete.vertices(gDom, which(degree(gDom) < 1))#
#calcualte node layout#
gDom<-simplify(gDom)#
coord3Ddom <- layout.fruchterman.reingold(gDom, dim = 3)
plot(gDom,layout=coord3Ddom, vertex.size=0.6,edge.size=0.1,edge.color="grey",vertex.color=colorsWild,vertex.label=NA)
load("~/Desktop/GeneCoExpressionGraphDom.DataAdj.R")
plot(gDom,layout=coord3Ddom, vertex.size=0.6,edge.size=0.1,edge.color="grey",vertex.color=colorsWild,vertex.label=NA)
rglplot(gDom,layout=coord3Ddom, vertex.size=0.6,edge.color="lightgrey",edge.size=0.1, vertex.color=colorsWild, vertex.label=NA)
rglplot(gDom,layout=coord3Ddom, vertex.size=0.6,edge.color="lightgrey",edge.width=0.1, vertex.color=colorsWild, vertex.label=NA)
library(igraph)
plotg(0)
contributors()
load("/Users/simonrenny-byfield/cotton/diploid_domestication/FiberTranscriptomeProject/WGCNA_analysis/FiberTranscriptome_RPM.R")
A1Expr<-exp.Dat[,13:24]
###
# A quick script to see overlap between CNV/PAV calls from
# cn.mops and those published in Swanson-Wagner et al., 2010
###
# Simon Renny-Byfield
# UC Davis, Jan 2015, version 1.
# In this instance we have one accession (TIL01) that has CNV/PAV
# calls in Swanson-Wagner and that we also have WGS Illumina data
# for. I have mapped the data to the reference genome, called the
# variants with cn.mops and will now compare these with the structural
# variants called with the CHIP in Swanson-Wagner et al. Hopefully
# there will be some overlap.
#load in some R libraries
source("http://bioconductor.org/biocLite.R")
biocLite("GenomicRanges")
library(devtools)
library(GenomicRanges)
library("rtracklayer")
library(GenomicFeatures)
#install_github('TxDb.Zmays.Ensembl.AGPv2.17', 'vsbuffalo')
#library(TxDb.Zmays.Ensembl.AGPv2.17)
#txdb<-TxDb.Zmays.Ensembl.AGPv2.17
#firstly read in a gff of all the genes from RefV3.
gffRangedData<-import.gff("/Users/srbyfield/GitHub/cn.mops/geneRefV3.gff3")
genesGRanges<-as(gffRangedData, "GRanges")
# use gffRangedData$group to access the genes via name
#load in the swanson-wagner data
SWcnvs<-read.table("/Users/srbyfield/GitHub/cn.mops/sw_tables.txt", header = TRUE,
fileEncoding="UTF-16LE",sep = "\t")
head(SWcnvs)
SWcnvs<-read.table("/Users/srbyfield/GitHub/cn.mops/sw_tables.txt", header = TRUE,sep = "\t")
head(SWcnvs)
SWcnvs$GeneID
gffRangedData[gffRangedData$group %in% SWcnvs$GeneID,]
genesGRanges$group
gffRangedData$group %in% SWcnvs$GeneID
genesGRanges[gffRangedData$group %in% SWcnvs$GeneID]
SWgeneGRanges<-genesGRanges[gffRangedData$group %in% SWcnvs$GeneID]
dim(SWgeneGRanges)
for ( i in 1:10 ) {
print(i)
}
completeData<-NULL
setwd("/Users/srbyfield/GitHub/cn.mops")
for ( i in 1:10 ) {
load(paste("bamDataRanges_",i,".RData", sep=""))
completeData<-cbind(completeData,cnvdf)
}#for
dim(completeData)
completeData<-NULL
setwd("/Users/srbyfield/GitHub/cn.mops")
for ( i in 1:10 ) {
load(paste("bamDataRanges_",i,".RData", sep=""))
completeData<-rbind(completeData,cnvdf)
}#for
dim(completeData)
completeData<-NULL
setwd("/Users/srbyfield/GitHub/cn.mops")
for ( i in 1:10 ) {
load(paste("bamDataRanges_",i,".RData", sep=""))
print(dim(cnvdf))
completeData<-rbind(completeData,cnvdf)
}#for
dim(completeData)
head(completeData)
tail(completeData)
completeData[1:100,]
completeData[1:200,]
save(file="bamDataRangesTIL11_TILL01.RData",completeData)
